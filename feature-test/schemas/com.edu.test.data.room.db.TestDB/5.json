{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "38497672a2bc01f23e215cde1a9195ae",
    "entities": [
      {
        "tableName": "test",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`testId` TEXT NOT NULL, `testName` TEXT NOT NULL, `testDate` TEXT NOT NULL, `duration` INTEGER NOT NULL, PRIMARY KEY(`testId`))",
        "fields": [
          {
            "fieldPath": "testId",
            "columnName": "testId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "testName",
            "columnName": "testName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "testDate",
            "columnName": "testDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "testId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "question",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`question` TEXT NOT NULL, `questionPoint` INTEGER NOT NULL, `questionType` TEXT NOT NULL, `test_id` TEXT, `questionId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`test_id`) REFERENCES `test`(`testId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "question",
            "columnName": "question",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "questionPoint",
            "columnName": "questionPoint",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "questionType",
            "columnName": "questionType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "test_id",
            "columnName": "test_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "questionId",
            "columnName": "questionId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "questionId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "test",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "test_id"
            ],
            "referencedColumns": [
              "testId"
            ]
          }
        ]
      },
      {
        "tableName": "AnswerEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`answerId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `answer` TEXT NOT NULL, `isCorrectAnswer` INTEGER NOT NULL, `question_id` INTEGER NOT NULL, FOREIGN KEY(`question_id`) REFERENCES `question`(`questionId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "answerId",
            "columnName": "answerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "answer",
            "columnName": "answer",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isCorrectAnswer",
            "columnName": "isCorrectAnswer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "question_id",
            "columnName": "question_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "answerId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "question",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "question_id"
            ],
            "referencedColumns": [
              "questionId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '38497672a2bc01f23e215cde1a9195ae')"
    ]
  }
}